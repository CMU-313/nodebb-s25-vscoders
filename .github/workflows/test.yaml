name: Lint and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call: # Usually called from deploy

defaults:
  run:
    shell: bash

permissions:
  checks: write  # for coverallsapp/github-action to create new checks
  contents: read  # for actions/checkout to fetch code

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TEST_ENV: 'production'
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    services:
      redis:
        image: 'redis:7.2.4'
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - run: cp install/package.json package.json

      - name: Debug API Key
        run: |
          echo "Key starts with:" $(echo "$OPENAI_API_KEY")
      - name: Export OPENAI_API_KEY to GITHUB_ENV
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

      - name: Start Translator with Docker Compose
        run: docker compose up -d translator

      - name: Wait for Translator to be Ready
        run: |
          echo "Waiting for translator to be ready..."
          sleep 5
          curl --retry 5 --retry-delay 2 http://localhost:5000/?content=test
          
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: Setup for Redis
        env:
          SETUP: >-
            {
              "url": "http://127.0.0.1:4567/forum",
              "secret": "abcdef",
              "admin:username": "admin",
              "admin:email": "test@example.org",
              "admin:password": "hAN3Eg8W",
              "admin:password:confirm": "hAN3Eg8W",

              "database": "redis",
              "redis:host": "127.0.0.1",
              "redis:port": 6379,
              "redis:password": "",
              "redis:database": 0
            }
          CI: >-
            {
              "host": "127.0.0.1",
              "database": 1,
              "port": 6379
            }
        run: |
          node app --setup="${SETUP}" --ci="${CI}"

      - name: Run ESLint
        run: npm run lint

      - name: Node tests
        run: npm test

      - name: Extract coverage info
        run: npm run coverage

      - name: Test coverage
        uses: coverallsapp/github-action@v2

      - name: Run Artillery Load Test
        run: |
            ./nodebb build
            ./nodebb start
            npx artillery run artillery-config.yml
            ./nodebb stop
